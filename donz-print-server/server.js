import express, { json } from 'express';
import * as dotenv from 'dotenv';
import cors from 'cors';
import axios from 'axios';
import OpenAI from 'openai';
import { Client, Databases, ID, Query } from "appwrite";
import sdk from 'node-appwrite'

const clientT = new sdk.Client();
clientT
    .setEndpoint("https://cloud.appwrite.io/v1")
    .setProject(process.env.APPWRITE_PROJECT_ID)
    .setKey(process.env.APPWRITE_API_KEY);

dotenv.config()
const app = express();
const openai = new OpenAI({
    apiKey: `${process.env.OPENAI_API_KEY}`,
});
const client = new Client()
    .setEndpoint("https://cloud.appwrite.io/v1")
    .setProject(process.env.APPWRITE_PROJECT_ID)

const databases = new Databases(client);
const databasesT = new sdk.Databases(clientT);

app.use(cors());
app.use(express.json({ limit: '50mb' }));
app.use(express.static('public'))


app.get('/', (req, res) => {
    res.status(200).json({ message: "Ayo! -From Don Z!" })
})

//  *********  PRINTFUL SERVER FUNCTIONS  **********

app.get('/categories', async (req, res) => {
    let categories;
    try {
        const res = await axios.get('https://api.printful.com/categories')
        categories = res.data.result.categories

    } catch (error) {
        console.error(error);
    }
    res.status(200).json({ message: "Categories Found", body: categories })
})

app.get('/store', async (req, res) => {
    let myStore = {};
    try {
        const res = await axios.get('https://api.printful.com/stores', {
            headers: {
                'Authorization': `Bearer ${process.env.PRINTFUL_API_KEY}`
            }
        })
        myStore = res.data.result[0]
        console.log(myStore);
    } catch (error) {
        console.error(error);
    }
    res.status(200).json({ message: "Store Found!", body: myStore })
})

app.get('/products', async (req, res) => {
    let myProducts = {};
    try {
        const res = await axios.get('https://api.printful.com/store/products', {
            headers: {
                'Authorization': `Bearer ${process.env.PRINTFUL_API_KEY}`
            }
        })
        myProducts = res.data.result
        console.log(myProducts);
    } catch (error) {
        console.error(error);
    }
    res.status(200).json({ message: "Products Found!", body: myProducts })
})

app.post('/create', async (req, res) => {
    console.log('Creating New Product', req.body);

    const options = {
        method: "POST",
        headers: {
            "Authorization": `Bearer ${process.env.PRINTFUL_API_KEY}`,
            "Content-Type": "application/json"
        },
        body: JSON.stringify({
            "sync_product": {
                "name": "These will be generated by AI",
                "thumbnail": req.body.file
            },
            "sync_variants": [
                {
                    "retail_price": "29.99",
                    "variant_id": 13431,
                    "files": [
                        {
                            "type": "default",
                            "url": req.body.file
                        }
                    ]
                }
            ]
        }),
    }
    let data;

    try {
        const res = await fetch('https://api.printful.com/store/products', options)
        data = await res.json()
        // res.send(data)
        console.log("Res: ", res, "Req: ", req);
    } catch (error) {
        console.error(error);
    }
    res.status(200).json({ message: "Created Product", data: data })
})

app.post('/generate', async (req, res) => {
    console.log('Generating Mockup...');
    const { imageUrl } = req.body;
    const options = {
        method: "POST",
        headers: {
            "Authorization": `Bearer ${process.env.PRINTFUL_API_KEY}`,
            "Content-Type": "application/json",
            "PF-Store-Id": '12741472'
        },
        body: JSON.stringify({
            "variant_ids": [
                13431,
            ],
            "format": "jpg",
            "files": [
                {
                    "placement": "default",
                    "image_url": imageUrl,
                    "position": {
                        "area_width": 2100,
                        "area_height": 1650,
                        "width": 2100,
                        "height": 1650,
                        "top": 0,
                        "left": 0
                    }
                }
            ]
        }),
    }
    let data;
    let taskKey;

    try {
        const res = await fetch('https://api.printful.com/mockup-generator/create-task/534', options)
        data = await res.json()
        // res.send(data)"gt-608666498"gt-608673738
        console.log("ResPoNsE: ", data);
        taskKey = data.result.task_key;
        console.log("Task Key: ", taskKey);
    } catch (error) {
        console.error(error);
    }
    res.status(200).json({ message: "Created Mockups", task_key: taskKey })
})

app.get('/mockup/:task', async (req, res) => {
    const task = req.params;
    console.log("Saving Mockups...", task.task);
    let myMockups;
    try {
        const res = await axios.get(`https://api.printful.com/mockup-generator/task?task_key=${task.task}`, {
            headers: {
                'Authorization': `Bearer ${process.env.PRINTFUL_API_KEY}`
            }
        })
        myMockups = res.data.result.mockups[0]
        console.log(myMockups);
    } catch (error) {
        console.error(error);
    }
    res.status(200).json({ message: "Mockups Saved!", images: myMockups })
})

//  *********  OPEN AI SERVER FUNCTIONS  **********

app.post('/imagination', async (req, res) => {
    console.log('Generating Image... Please Hold');
    let collectImage;
    try {
        const { input } = req.body;
        const response = await openai.images.generate({
            prompt: input,
            model: "dall-e-3",
            quality: 'hd',
            style: 'vivid',
            n: 1,
            size: '1792x1024',
            response_format: 'url'
        })
        const image = response.data[0].url;

        // console.log("IMAGE: ", image);
        const saveImage = await databases.createDocument(
            process.env.APPWRITE_DATABASE_ID,
            process.env.APPWRITE_COLLECTION_ID,
            ID.unique(),
            {
                image_url: image,
            }
        )
        //console.log("Saved Something!", saveImage);
        res.status(200).json({ message: "Success!", photo: image })
    } catch (error) {
        res.status(500).json({ message: "Something Went Wrong, Please Try Again" })
        console.error(error);
    }

})


//  *********  APPWRITE SERVER FUNCTIONS  **********

app.get('/database', async (req, res) => {
    let data;
    try {
        const res = await databases.listDocuments(
            process.env.APPWRITE_DATABASE_ID,
            process.env.APPWRITE_COLLECTION_ID,
        )
        data = res.documents
        console.log(res.documents);
    } catch (error) {
        console.error(error);
    }
    res.status(200).json({ message: "Data Found", body: data })
})


app.listen(8080, () => {
    console.log("Server is running on PORT 8080");
})